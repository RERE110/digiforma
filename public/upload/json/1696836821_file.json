{"data":{"program":{"category":{"name":"Développement"},"costsInter":[{"cost":2380.0}],"description":"Objectif de formation : Maîtriser les concepts avancés du langage C++","durationInHours":28.0,"goals":[{"text":"Utiliser des bonnes pratiques concernant l'usage des classes"},{"text":"Connaître le besoin et les pièges des conversions"},{"text":"Connaître l’intérêt du Run-time type information"},{"text":"Comprendre l’utilisation des pointeurs"},{"text":"Programmer les exceptions de manière efficace"},{"text":"Comprendre comment manipuler les templates & les design patterns"},{"text":"Gérer un objet qui se comporte comme une fonction"},{"text":"Déployer la puissance de la bibliothèque STL"},{"text":"Concevoir des idiomes"},{"text":"Appréhender les possibilités de la bibliothèque Boost"},{"text":"Comprendre les principales nouveautés du C++11"}],"id":"1129438","image":{"url":"https://cdn.filestackcontent.com/1YzpipfjRFWbqaKBp01k"},"name":"C++ - Expertise","steps":[{"substeps":[{"text":"Constructeurs & gestion de la mémoire"},{"text":"Forme canonique d'une classe"},{"text":"Rôle du constructeur de copie"},{"text":"Surcharge de l'opérateur d’affectation"},{"text":"Intérêt d'un destructeur virtuel"},{"text":"Pièges et erreurs"},{"text":"Travaux Pratiques : Exécution d'exemples pédagogiques illustrant les concepts présentés"}],"text":"Classes en C++"},{"substeps":[{"text":"Présentation des conversions, syntaxe"},{"text":"Const_cast"},{"text":"Static_cast"},{"text":"Reinterpret_cast"},{"text":"Dynamic_cast"},{"text":"Travaux Pratiques : Détermination du type de cast et déploiement dans différentes situations"}],"text":"Conversions en C++"},{"substeps":[{"text":"Concepts clés et cas d'usage"},{"text":"Usage du dynamic_cast : réalisation d'un downcast dans une hiérarchie de classes"},{"text":"Opérateur typeid & classe type_info"},{"text":"Travaux Pratiques : Déploiement de RTTI pour effectuer un affichage spécifique d'un objet faisant partie d'une hiéarchie de classes"}],"text":"Identification de type à l'exécution"},{"substeps":[{"text":"Syntaxe des pointeurs sur membres de classes"},{"text":"Déploiement"},{"text":"Travaux Pratiques : Manipulation de pointeurs"}],"text":"Pointeurs & membres de classes"},{"substeps":[{"text":"Danger des pointeurs nus"},{"text":"Concept de la gestion de ressources"},{"text":"Rôles des smart pointers"},{"text":"Raisons de l'obsolescence de auto_ptr"},{"text":"Implémentation de unique_ptr, shared_ptr et weak_ptr"},{"text":"Travaux Pratiques : Utilisation et déploiement des pointeurs intelligents"}],"text":"Smart pointers"},{"substeps":[{"text":"Concept d'exceptions"},{"text":"Classes d'exceptions"},{"text":"Lever une exception"},{"text":"Gestionnaires d'exceptions"},{"text":"Liste d'exceptions"},{"text":"Hiérarchies d'exceptions"},{"text":"Classes d'exceptions standards"},{"text":"Constructeurs & exceptions"},{"text":"Exceptions & gestion des ressources"},{"text":"Best practices"},{"text":"Travaux Pratiques : implémentation d'une gestion d'exceptions dans une application effectuant des entrées-sorties"}],"text":"Traitement des exceptions"},{"substeps":[{"text":"Introduction"},{"text":"Forces & faiblesses"},{"text":"Syntaxe des templates de fonctions"},{"text":"Syntaxe des templates de classes"},{"text":"Syntaxe des templates de méthodes"},{"text":"Instanciation des templates de fonctions"},{"text":"Instanciation des templates de classes"},{"text":"Spécialisation partielle ou totale des templates"},{"text":"Travaux Pratiques : Implémentation d'une fonction template, d'une classe template puis d'une classe template template"}],"text":"Templates"},{"substeps":[{"text":"Introduction des patterns du GoF"},{"text":"Patterns de création"},{"text":"Patterns de structure"},{"text":"Patterns de comportement"},{"text":"Travaux Pratiques : Manipulation des différents patterns"}],"text":"Premiers pas avec les Design Patterns"},{"substeps":[{"text":"Introduction"},{"text":"Rôles des foncteurs"},{"text":"Foncteurs prédéfinis dans la bibliothèque standard"},{"text":"Usage d'adaptateurs de fonctions unaires & binaires"},{"text":"Travaux Pratiques : Implémentation d'un foncteur dans un algorithme"}],"text":"Foncteurs"},{"substeps":[{"text":"Premiers pas avec la Standard Template Library"},{"text":"Conteneurs"},{"text":"Allocateurs"},{"text":"Itérateurs"},{"text":"Algorithmes"},{"text":"Entrées-sorties"},{"text":"Travaux Pratiques : Déploiement de quelques conteneurs, d'algorithmes & template d'entrées-sorties"}],"text":"Bibliothèque STL"},{"substeps":[{"text":"Traits"},{"text":"Policy"},{"text":"SFINAE"},{"text":"CRTP : pour le polymorphisme statique"},{"text":"Travaux Pratiques : Implémentation des différents idiomes rencontrés"}],"text":"Idiomes"},{"substeps":[{"text":"Comment exécuter à la compilation"},{"text":"Forces & faiblesses"},{"text":"Optimisations"},{"text":"Travaux Pratiques : Implémentation de la méta-programmation dans des cas d'études"}],"text":"Méta-programmation"},{"substeps":[{"text":"Introduction"},{"text":"static_assert"},{"text":"property_map"},{"text":"smart_ptr"},{"text":"tuple"},{"text":"any"},{"text":"variant"},{"text":"threads"},{"text":"interprocess"},{"text":"mpl"},{"text":"Travaux Pratiques : Mise en pratique de plusieurs templates"}],"text":"Bibliothèque Boost"},{"substeps":[{"text":"Mot-clés auto, decltype & constexpr"},{"text":"Définition des rvalue références"},{"text":"Application des rvalue références : déplacement & transfert parfait"},{"text":"Utilisation de std::move & std::forward"},{"text":"Les fonctions lambda"},{"text":"Les variadic templates"},{"text":"Initialisation des données membres non-statiques"},{"text":"Alias de template"},{"text":"Constructeurs délégués"},{"text":"Déclarations étendues de l’amitié"},{"text":"Surcharge explicite de la virtualité"},{"text":"Constante nullptr"},{"text":"« Range-based » for"},{"text":"Opérateurs de conversion explicites"},{"text":"Tour d'horizon des types POD (Plain Old Data) revisités"},{"text":"Types locaux et non nommés comme arguments template"},{"text":"Énumérations à typage fort"},{"text":"Fonctions par défaut et supprimées "},{"text":"Espaces de nom inline"},{"text":"Propagation des exceptions"},{"text":"Travaux Pratiques : Mise en pratiques des nouveaux outils de C++"}],"text":"Nouveautés de C++11 "},{"substeps":[{"text":"Introduction"},{"text":"Présentation des Best Practices"}],"text":"Performances"}]}}}